service: serverless-demo

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  environment:
    NODE_OPTIONS: "--enable-source-maps"
  apiGateway:
    shouldStartNameWithService: true
    minimumCompressionSize: 1024
    binaryMediaTypes:
      - 'multipart/form-data'
  httpApi:
    cors: true

functions:
  hello:
    handler: dist/handler.hello
    events:
      - http:
          path: hello
          method: get
          cors: true

  createUser:
    handler: dist/handler.createUser
    events:
      - http:
          path: users
          method: post
          cors: true
          request:
            schemas:
              application/json:
                schema:
                  type: object
                  required:
                    - name
                    - email
                  properties:
                    name:
                      type: string
                    email:
                      type: string

  getUserById:
    handler: dist/handler.getUserById
    events:
      - http:
          path: users/{userId}
          method: get
          cors: true
          request:
            parameters:
              paths:
                userId: true

  searchUsers:
    handler: dist/handler.searchUsers
    events:
      - http:
          path: users
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: false
                limit: false

  processData:
    handler: dist/handler.processData
    events:
      - http:
          path: process
          method: post
          cors: true

plugins:
  - serverless-offline
  - serverless-typescript

custom:
  serverless-offline:
    httpPort: 3000
    verbose: true
    websocket: true
  typescript:
    srcPath: ./
    tsConfigFileName: ./tsconfig.json